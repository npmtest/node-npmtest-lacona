{"/home/travis/build/npmtest/node-npmtest-lacona/test.js":"/* istanbul instrument in package npmtest_lacona */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-lacona/lib.npmtest_lacona.js":"/* istanbul instrument in package npmtest_lacona */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_lacona = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_lacona = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-lacona/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-lacona && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_lacona */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_lacona\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_lacona.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_lacona.rollup.js'] =\n            local.assetsDict['/assets.npmtest_lacona.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_lacona.__dirname + '/lib.npmtest_lacona.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/lacona.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _parser = require('./parser');\n\nObject.defineProperty(exports, 'Parser', {\n  enumerable: true,\n  get: function get() {\n    return _parser.Parser;\n  }\n});\n\nvar _error = require('./error');\n\nObject.defineProperty(exports, 'LaconaError', {\n  enumerable: true,\n  get: function get() {\n    return _error.LaconaError;\n  }\n});","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/parser.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.createOption = createOption;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _events = require('events');\n\nvar _parse2 = require('./parse');\n\nvar _reconcile2 = require('./reconcile');\n\nvar _error = require('./error');\n\nvar _sourceManager = require('./source-manager');\n\nvar _sourceManager2 = _interopRequireDefault(_sourceManager);\n\nglobal.__z = 0;\n\nfunction from(i) {\n  var a = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _getIterator(i), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var x = _step.value;\n\n      a.push(x);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator['return']) {\n        _iterator['return']();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return a;\n}\n\nfunction callEvery(ary) {\n  _lodash2['default'].forEach(ary, function (callback) {\n    return callback();\n  });\n}\n\nvar optionDefaults = {\n  text: '',\n  words: [],\n  qualifiers: [],\n  callbacks: [],\n  _previousEllipsis: []\n};\n\nfunction createOption(options) {\n  return _lodash2['default'].defaults(options, optionDefaults);\n}\n\nfunction normalizeOutput(option) {\n  var output = _lodash2['default'].pick(option, ['words', 'score', 'result', 'qualifiers', 'ellipsis']);\n  return output;\n}\n\nvar Parser = (function (_EventEmitter) {\n  _inherits(Parser, _EventEmitter);\n\n  function Parser() {\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var _ref$langs = _ref.langs;\n    var langs = _ref$langs === undefined ? ['default'] : _ref$langs;\n    var grammar = _ref.grammar;\n    var _ref$extensions = _ref.extensions;\n    var extensions = _ref$extensions === undefined ? [] : _ref$extensions;\n\n    _classCallCheck(this, Parser);\n\n    _get(Object.getPrototypeOf(Parser.prototype), 'constructor', this).call(this);\n\n    this.langs = langs;\n    this.grammar = grammar;\n    this.extensions = extensions;\n    this._oldExtensions = [];\n    this._parseEndCallbacks = [];\n    this._deactivateCallbacks = [];\n    this._sourceManager = new _sourceManager2['default']({\n      update: this._maybeReparse.bind(this)\n    });\n  }\n\n  _createClass(Parser, [{\n    key: '_maybeReparse',\n    value: function _maybeReparse() {\n      this.emit('update');\n    }\n  }, {\n    key: '_getExtensions',\n    value: function _getExtensions(Constructor) {\n      return _lodash2['default'].reduce(this.extensions, function (acc, Extension) {\n        if (_lodash2['default'].includes(Extension['extends'], Constructor)) {\n          acc.push(Extension);\n        }\n        return acc;\n      }, []);\n    }\n  }, {\n    key: '_getReconcileParseOptions',\n    value: function _getReconcileParseOptions() {\n      var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref2$extensionsChanged = _ref2.extensionsChanged;\n      var extensionsChanged = _ref2$extensionsChanged === undefined ? false : _ref2$extensionsChanged;\n\n      return {\n        langs: this.langs,\n        getExtensions: this._getExtensions.bind(this),\n        sourceManager: this._sourceManager,\n        scheduleParseEndCallback: this._scheduleParseEndCallback.bind(this),\n        scheduleDeactivateCallback: this._scheduleDeactivateCallback.bind(this),\n        extensionsChanged: extensionsChanged,\n        parses: 0\n      };\n    }\n  }, {\n    key: '_scheduleParseEndCallback',\n    value: function _scheduleParseEndCallback(callback) {\n      this._parseEndCallbacks.push(callback);\n    }\n  }, {\n    key: '_scheduleDeactivateCallback',\n    value: function _scheduleDeactivateCallback(callback) {\n      this._deactivateCallbacks.push(callback);\n    }\n  }, {\n    key: '_reconcile',\n    value: function _reconcile(options) {\n      this._phrase = (0, _reconcile2.reconcile)({ descriptor: this.grammar, phrase: this._phrase, options: options });\n    }\n  }, {\n    key: 'reconcile',\n    value: function reconcile() {\n      this._reconcile(this._getReconcileParseOptions());\n    }\n  }, {\n    key: 'activate',\n    value: function activate() {\n      this._sourceManager.activate();\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      callEvery(this._deactivateCallbacks);\n      this._deactivateCallbacks = [];\n\n      this._sourceManager.deactivate();\n    }\n  }, {\n    key: 'parse',\n    value: _regeneratorRuntime.mark(function parse(inputString) {\n      var extensionsChanged, input, options, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, output;\n\n      return _regeneratorRuntime.wrap(function parse$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            if (_lodash2['default'].isString(inputString)) {\n              context$2$0.next = 2;\n              break;\n            }\n\n            throw new _error.LaconaError('lacona parse input must be a string');\n\n          case 2:\n            extensionsChanged = !_lodash2['default'].isEqual(this._oldExtensions, this.extensions);\n\n            if (extensionsChanged) {\n              this._oldExtensions = _lodash2['default'].clone(this.extensions);\n            }\n\n            input = createOption({ text: inputString });\n            options = this._getReconcileParseOptions({ extensionsChanged: extensionsChanged });\n\n            this._reconcile(options);\n\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            context$2$0.prev = 10;\n            _iterator2 = _getIterator((0, _parse2.parse)({ phrase: this._phrase, input: input, options: options }));\n\n          case 12:\n            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n              context$2$0.next = 21;\n              break;\n            }\n\n            output = _step2.value;\n\n            if (output.text) {\n              context$2$0.next = 18;\n              break;\n            }\n\n            callEvery(output.callbacks);\n            context$2$0.next = 18;\n            return normalizeOutput(output);\n\n          case 18:\n            _iteratorNormalCompletion2 = true;\n            context$2$0.next = 12;\n            break;\n\n          case 21:\n            context$2$0.next = 27;\n            break;\n\n          case 23:\n            context$2$0.prev = 23;\n            context$2$0.t0 = context$2$0['catch'](10);\n            _didIteratorError2 = true;\n            _iteratorError2 = context$2$0.t0;\n\n          case 27:\n            context$2$0.prev = 27;\n            context$2$0.prev = 28;\n\n            if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n              _iterator2['return']();\n            }\n\n          case 30:\n            context$2$0.prev = 30;\n\n            if (!_didIteratorError2) {\n              context$2$0.next = 33;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 33:\n            return context$2$0.finish(30);\n\n          case 34:\n            return context$2$0.finish(27);\n\n          case 35:\n            if (global.logStatus) global.logStatus({ parses: options.parses });\n\n            callEvery(this._parseEndCallbacks);\n\n            this._parseEndCallbacks = [];\n\n          case 38:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, parse, this, [[10, 23, 27, 35], [28,, 30, 34]]);\n    })\n  }, {\n    key: 'parseArray',\n    value: function parseArray(inputString) {\n      return from(this.parse(inputString));\n    }\n  }]);\n\n  return Parser;\n})(_events.EventEmitter);\n\nexports.Parser = Parser;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/parse.js":"'use strict';\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.parse = parse;\nvar marked0$0 = [parse].map(_regeneratorRuntime.mark);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction hasPlaceholder(output) {\n  return _lodash2['default'].any(output.words, 'placeholder');\n}\n\nfunction modify(phrase, output) {\n  var modifications = {};\n\n  if (phrase.props.ellipsis) {\n    modifications.ellipsis = true;\n  }\n\n  if (phrase.props.value) {\n    modifications.result = phrase.props.value;\n  }\n\n  if (phrase.props.qualifiers) {\n    modifications.qualifiers = phrase.props.qualifiers;\n  }\n\n  if (phrase.props.score != null) {\n    modifications.score = phrase.props.score;\n  }\n\n  return _lodash2['default'].assign({}, output, modifications);\n}\n\nfunction parse(_ref) {\n  var phrase = _ref.phrase;\n  var input = _ref.input;\n  var options = _ref.options;\n\n  var iterator, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2;\n\n  return _regeneratorRuntime.wrap(function parse$(context$1$0) {\n    while (1) switch (context$1$0.prev = context$1$0.next) {\n      case 0:\n        options.parses++;\n\n        if (!phrase.__describedPhrase) {\n          context$1$0.next = 32;\n          break;\n        }\n\n        iterator = parse({ phrase: phrase.__describedPhrase, input: input, options: options });\n        _iteratorNormalCompletion = true;\n        _didIteratorError = false;\n        _iteratorError = undefined;\n        context$1$0.prev = 6;\n        _iterator = _getIterator(iterator);\n\n      case 8:\n        if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n          context$1$0.next = 16;\n          break;\n        }\n\n        output = _step.value;\n\n        if (!(!phrase.validate || hasPlaceholder(output) || phrase.validate(output.result))) {\n          context$1$0.next = 13;\n          break;\n        }\n\n        context$1$0.next = 13;\n        return modify(phrase, output);\n\n      case 13:\n        _iteratorNormalCompletion = true;\n        context$1$0.next = 8;\n        break;\n\n      case 16:\n        context$1$0.next = 22;\n        break;\n\n      case 18:\n        context$1$0.prev = 18;\n        context$1$0.t0 = context$1$0['catch'](6);\n        _didIteratorError = true;\n        _iteratorError = context$1$0.t0;\n\n      case 22:\n        context$1$0.prev = 22;\n        context$1$0.prev = 23;\n\n        if (!_iteratorNormalCompletion && _iterator['return']) {\n          _iterator['return']();\n        }\n\n      case 25:\n        context$1$0.prev = 25;\n\n        if (!_didIteratorError) {\n          context$1$0.next = 28;\n          break;\n        }\n\n        throw _iteratorError;\n\n      case 28:\n        return context$1$0.finish(25);\n\n      case 29:\n        return context$1$0.finish(22);\n\n      case 30:\n        context$1$0.next = 61;\n        break;\n\n      case 32:\n        if (!phrase._handleParse) {\n          context$1$0.next = 61;\n          break;\n        }\n\n        _iteratorNormalCompletion2 = true;\n        _didIteratorError2 = false;\n        _iteratorError2 = undefined;\n        context$1$0.prev = 36;\n        _iterator2 = _getIterator(phrase._handleParse(input, options));\n\n      case 38:\n        if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n          context$1$0.next = 45;\n          break;\n        }\n\n        output = _step2.value;\n        context$1$0.next = 42;\n        return modify(phrase, output);\n\n      case 42:\n        _iteratorNormalCompletion2 = true;\n        context$1$0.next = 38;\n        break;\n\n      case 45:\n        context$1$0.next = 51;\n        break;\n\n      case 47:\n        context$1$0.prev = 47;\n        context$1$0.t1 = context$1$0['catch'](36);\n        _didIteratorError2 = true;\n        _iteratorError2 = context$1$0.t1;\n\n      case 51:\n        context$1$0.prev = 51;\n        context$1$0.prev = 52;\n\n        if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n          _iterator2['return']();\n        }\n\n      case 54:\n        context$1$0.prev = 54;\n\n        if (!_didIteratorError2) {\n          context$1$0.next = 57;\n          break;\n        }\n\n        throw _iteratorError2;\n\n      case 57:\n        return context$1$0.finish(54);\n\n      case 58:\n        return context$1$0.finish(51);\n\n      case 59:\n        context$1$0.next = 61;\n        break;\n\n      case 61:\n        // noop\n\n        if (phrase.source) {\n          phrase.__lastSourceVersion = options.sourceManager.getDataVersion(phrase.source);\n        }\n\n      case 62:\n      case 'end':\n        return context$1$0.stop();\n    }\n  }, marked0$0[0], this, [[6, 18, 22, 30], [23,, 25, 29], [36, 47, 51, 59], [52,, 54, 58]]);\n}","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/reconcile.js":"/** @jsx createElement */\n'use strict';\n\nvar _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nvar _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.reconcile = reconcile;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _elements = require('./elements');\n\nvar builtins = _interopRequireWildcard(_elements);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _component = require('./component');\n\nfunction reconcile(_ref) {\n  var descriptor = _ref.descriptor;\n  var phrase = _ref.phrase;\n  var options = _ref.options;\n\n  var func = _lodash2['default'].isArray(descriptor) ? reconcileArray : reconcileOne;\n  return func({ descriptor: descriptor, phrase: phrase, options: options });\n}\n\nfunction reconcileArray(_ref2) {\n  var descriptor = _ref2.descriptor;\n  var phrase = _ref2.phrase;\n  var options = _ref2.options;\n\n  return _lodash2['default'].chain(descriptor).reject(function (item) {\n    return item == null;\n  }).reject(_lodash2['default'].isString).zip(phrase).map(function (_ref3) {\n    var _ref32 = _slicedToArray(_ref3, 2);\n\n    var descriptor = _ref32[0];\n    var phrase = _ref32[1];\n    return reconcile({ descriptor: descriptor, phrase: phrase, options: options });\n  }).value();\n}\n\nfunction reconcileOne(_ref4) {\n  var descriptor = _ref4.descriptor;\n  var phrase = _ref4.phrase;\n  var options = _ref4.options;\n\n  if (descriptor == null && phrase) return (0, _component.destroyPhrase)({ phrase: phrase, sourceManager: options.sourceManager });\n\n  var Constructor = (0, _component.getConstructor)({ Constructor: descriptor.Constructor, type: 'phrase' });\n  var props = (0, _component.getRealProps)({ descriptor: descriptor, Constructor: Constructor });\n\n  if (phrase && phrase.constructor === Constructor && _lodash2['default'].isEqual(props, phrase.props)) {\n    // TODO could be sped up if we don't compare props for things without a describe\n\n    var _getExtensions = getExtensions({ Constructor: Constructor, phrase: phrase, options: options });\n\n    var extensionsChanged = _getExtensions.extensionsChanged;\n    var extensions = _getExtensions.extensions;\n\n    if (extensionsChanged || sourceChanged({ phrase: phrase, options: options })) {\n      var describedPhrase = addDescribedPhrase({ Constructor: Constructor, phrase: phrase, extensions: extensions, options: options });\n    }\n\n    return phrase;\n  } else {\n    //reconstruct\n    var extensions = options.getExtensions(Constructor);\n\n    if (phrase) (0, _component.destroyPhrase)({ phrase: phrase, options: options });\n\n    var newPhrase = (0, _component.instantiate)({ Constructor: Constructor, props: props });\n\n    (0, _component.addSource)({ component: newPhrase, options: options });\n\n    var describedPhrase = addDescribedPhrase({ Constructor: Constructor, phrase: newPhrase, extensions: extensions, options: options });\n\n    newPhrase.__oldExtensions = extensions;\n\n    return newPhrase;\n  }\n}\n\nfunction sourceChanged(_ref5) {\n  var phrase = _ref5.phrase;\n  var options = _ref5.options;\n\n  return phrase.source && phrase.__lastSourceVersion < options.sourceManager.getDataVersion(phrase.source);\n}\n\nfunction getExtensions(_ref6) {\n  var Constructor = _ref6.Constructor;\n  var phrase = _ref6.phrase;\n  var options = _ref6.options;\n\n  if (options.extensionsChanged) {\n    var extensions = options.getExtensions(Constructor);\n\n    if (!_lodash2['default'].isEqual(extensions, phrase.__oldExtensions)) {\n      phrase.__oldExtensions = extensions;\n      return {\n        extensions: extensions,\n        extensionsChanged: true\n      };\n    }\n  }\n\n  return {\n    extensionsChanged: false,\n    extensions: phrase.__oldExtensions\n  };\n}\n\nfunction addDescribedPhrase(_ref7) {\n  var phrase = _ref7.phrase;\n  var extensions = _ref7.extensions;\n  var options = _ref7.options;\n\n  var describe = getCall({ prop: 'describe', Constructor: phrase.constructor, langs: options.langs });\n  var description = getDescription({ describe: describe, extensions: extensions, phrase: phrase });\n  var describedPhrase = description ? reconcile({ descriptor: description, options: options, phrase: phrase.__describedPhrase }) : null;\n  phrase.__describedPhrase = describedPhrase;\n}\n\nfunction getCall(_ref8) {\n  var Constructor = _ref8.Constructor;\n  var langs = _ref8.langs;\n  var prop = _ref8.prop;\n\n  if (Constructor.prototype[prop]) {\n    return Constructor.prototype[prop];\n  } else if (Constructor.translations) {\n    return getCallFromTranslations({ prop: prop, langs: langs, translations: Constructor.translations });\n  }\n}\n\nfunction getCallFromTranslations(_ref9) {\n  var prop = _ref9.prop;\n  var langs = _ref9.langs;\n  var translations = _ref9.translations;\n\n  return _lodash2['default'].chain(langs.concat('default')).map(function (lang) {\n    return _lodash2['default'].find(translations, function (obj) {\n      return _lodash2['default'].includes(obj.langs, lang);\n    });\n  }).filter(_lodash2['default'].negate(_lodash2['default'].isUndefined)).first().value()[prop];\n}\n//\n// function setPropsAndState({phrase, props, state, changed}) {\n//   phrase.props = props\n//\n//   if (!phrase.setState) {\n//     phrase.state = state || {}\n//     phrase.setState = function (nextState) {\n//       _.merge(this.state, nextState)\n//       this._stateChanged = true\n//       changed(this)\n//     }\n//   }\n// }\n\nfunction getDescription(_ref10) {\n  var describe = _ref10.describe;\n  var extensions = _ref10.extensions;\n  var phrase = _ref10.phrase;\n\n  if (describe) {\n    var tempDescription = describe.call(phrase);\n    if (extensions.length) {\n      var extensionElements = _lodash2['default'].map(extensions, function (Extension) {\n        return (0, _laconaPhrase.createElement)(Extension, _extends({}, phrase.props, { id: undefined }));\n      });\n\n      return (0, _laconaPhrase.createElement)(\n        'choice',\n        null,\n        tempDescription,\n        extensionElements\n      );\n    } else {\n      return tempDescription;\n    }\n  }\n}","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/index.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _choice = require('./choice');\n\nObject.defineProperty(exports, 'choice', {\n  enumerable: true,\n  get: function get() {\n    return _choice.Choice;\n  }\n});\n\nvar _dynamic = require('./dynamic');\n\nObject.defineProperty(exports, 'dynamic', {\n  enumerable: true,\n  get: function get() {\n    return _dynamic.Dynamic;\n  }\n});\n\nvar _label = require('./label');\n\nObject.defineProperty(exports, 'label', {\n  enumerable: true,\n  get: function get() {\n    return _label.Label;\n  }\n});\n\nvar _filter = require('./filter');\n\nObject.defineProperty(exports, 'filter', {\n  enumerable: true,\n  get: function get() {\n    return _filter.Filter;\n  }\n});\n\nvar _freetext = require('./freetext');\n\nObject.defineProperty(exports, 'freetext', {\n  enumerable: true,\n  get: function get() {\n    return _freetext.Freetext;\n  }\n});\n\nvar _list = require('./list');\n\nObject.defineProperty(exports, 'list', {\n  enumerable: true,\n  get: function get() {\n    return _list.List;\n  }\n});\n\nvar _literal = require('./literal');\n\nObject.defineProperty(exports, 'literal', {\n  enumerable: true,\n  get: function get() {\n    return _literal.Literal;\n  }\n});\n\nvar _map = require('./map');\n\nObject.defineProperty(exports, 'map', {\n  enumerable: true,\n  get: function get() {\n    return _map.MapPhrase;\n  }\n});\n\nvar _raw = require('./raw');\n\nObject.defineProperty(exports, 'raw', {\n  enumerable: true,\n  get: function get() {\n    return _raw.Raw;\n  }\n});\n\nvar _repeat = require('./repeat');\n\nObject.defineProperty(exports, 'repeat', {\n  enumerable: true,\n  get: function get() {\n    return _repeat.Repeat;\n  }\n});\n\nvar _sequence = require('./sequence');\n\nObject.defineProperty(exports, 'sequence', {\n  enumerable: true,\n  get: function get() {\n    return _sequence.Sequence;\n  }\n});\n\nvar _tap = require('./tap');\n\nObject.defineProperty(exports, 'tap', {\n  enumerable: true,\n  get: function get() {\n    return _tap.Tap;\n  }\n});","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/choice.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _defineProperty = require('babel-runtime/helpers/define-property')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _parse = require('../parse');\n\nvar _reconcile = require('../reconcile');\n\nvar Choice = (function (_Phrase) {\n  _inherits(Choice, _Phrase);\n\n  function Choice() {\n    _classCallCheck(this, Choice);\n\n    _get(Object.getPrototypeOf(Choice.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Choice, [{\n    key: '_handleParse',\n    value: _regeneratorRuntime.mark(function _handleParse(input, options) {\n      var successes, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, childPhrase, success, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, output, newResult, modifications;\n\n      return _regeneratorRuntime.wrap(function _handleParse$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            successes = 0;\n\n            if (!(this.props.children && this.props.children.length > 0)) {\n              context$2$0.next = 65;\n              break;\n            }\n\n            this.childPhrases = (0, _reconcile.reconcile)({ descriptor: this.props.children, phrase: this.childPhrases, options: options });\n\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 6;\n            _iterator = _getIterator(this.childPhrases);\n\n          case 8:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 51;\n              break;\n            }\n\n            childPhrase = _step.value;\n            success = false;\n\n            if (!(childPhrase.props.id == null && !this.props.limit)) {\n              context$2$0.next = 15;\n              break;\n            }\n\n            return context$2$0.delegateYield((0, _parse.parse)({ phrase: childPhrase, input: input, options: options }), 't0', 13);\n\n          case 13:\n            context$2$0.next = 44;\n            break;\n\n          case 15:\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            context$2$0.prev = 18;\n            _iterator2 = _getIterator((0, _parse.parse)({ phrase: childPhrase, input: input, options: options }));\n\n          case 20:\n            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n              context$2$0.next = 30;\n              break;\n            }\n\n            output = _step2.value;\n            newResult = childPhrase.props.id != null ? _defineProperty({}, childPhrase.props.id, output.result) : output.result;\n            modifications = { result: newResult };\n\n            if (this.props.limit) modifications.callbacks = output.callbacks.concat(function () {\n              return success = true;\n            });\n\n            context$2$0.next = 27;\n            return _lodash2['default'].assign({}, output, modifications);\n\n          case 27:\n            _iteratorNormalCompletion2 = true;\n            context$2$0.next = 20;\n            break;\n\n          case 30:\n            context$2$0.next = 36;\n            break;\n\n          case 32:\n            context$2$0.prev = 32;\n            context$2$0.t1 = context$2$0['catch'](18);\n            _didIteratorError2 = true;\n            _iteratorError2 = context$2$0.t1;\n\n          case 36:\n            context$2$0.prev = 36;\n            context$2$0.prev = 37;\n\n            if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n              _iterator2['return']();\n            }\n\n          case 39:\n            context$2$0.prev = 39;\n\n            if (!_didIteratorError2) {\n              context$2$0.next = 42;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 42:\n            return context$2$0.finish(39);\n\n          case 43:\n            return context$2$0.finish(36);\n\n          case 44:\n            if (!this.props.limit) {\n              context$2$0.next = 48;\n              break;\n            }\n\n            if (success) successes++;\n\n            if (!(this.props.limit <= successes)) {\n              context$2$0.next = 48;\n              break;\n            }\n\n            return context$2$0.abrupt('break', 51);\n\n          case 48:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 8;\n            break;\n\n          case 51:\n            context$2$0.next = 57;\n            break;\n\n          case 53:\n            context$2$0.prev = 53;\n            context$2$0.t2 = context$2$0['catch'](6);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t2;\n\n          case 57:\n            context$2$0.prev = 57;\n            context$2$0.prev = 58;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 60:\n            context$2$0.prev = 60;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 63;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 63:\n            return context$2$0.finish(60);\n\n          case 64:\n            return context$2$0.finish(57);\n\n          case 65:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, _handleParse, this, [[6, 53, 57, 65], [18, 32, 36, 44], [37,, 39, 43], [58,, 60, 64]]);\n    })\n  }, {\n    key: '_destroy',\n    value: function _destroy(destroy) {\n      _lodash2['default'].forEach(this.childPhrases, destroy);\n\n      delete this.childPhrases;\n    }\n  }]);\n\n  return Choice;\n})(_laconaPhrase.Phrase);\n\nexports.Choice = Choice;\n\n//perf opt","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona-phrase/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Source = exports.Phrase = undefined;\nexports.createElement = createElement;\n\nvar _inherits2 = require('inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _package = require('../package');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction createElement(Constructor, props) {\n  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  return {\n    Constructor: Constructor,\n    props: props,\n    children: children,\n    version: _package.version\n  };\n}\n\nvar LaconaElementInstance = function LaconaElementInstance(obj) {\n  _classCallCheck(this, LaconaElementInstance);\n\n  for (var key in obj) {\n    this[key] = obj[key];\n  }\n};\n\nvar Phrase = exports.Phrase = (function (_LaconaElementInstanc) {\n  _inherits(Phrase, _LaconaElementInstanc);\n\n  function Phrase() {\n    _classCallCheck(this, Phrase);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Phrase).apply(this, arguments));\n  }\n\n  return Phrase;\n})(LaconaElementInstance);\n\nvar Source = exports.Source = (function (_LaconaElementInstanc2) {\n  _inherits(Source, _LaconaElementInstanc2);\n\n  function Source() {\n    _classCallCheck(this, Source);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Source).apply(this, arguments));\n  }\n\n  return Source;\n})(LaconaElementInstance);","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/dynamic.js":"'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _component = require('../component');\n\nvar _parse = require('../parse');\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _reconcile = require('../reconcile');\n\nvar _stringUtils = require('../string-utils');\n\nvar Dynamic = (function (_Phrase) {\n  _inherits(Dynamic, _Phrase);\n\n  function Dynamic() {\n    _classCallCheck(this, Dynamic);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _get(Object.getPrototypeOf(Dynamic.prototype), 'constructor', this).apply(this, args);\n\n    this._phrases = {};\n    this._sources = {};\n    this._lastSourceVersions = {};\n  }\n\n  _createClass(Dynamic, [{\n    key: 'sourceChanged',\n    value: function sourceChanged(text, options) {\n      return this._sources[text] && this._lastSourceVersions[text] < options.sourceManager.getDataVersion(this._sources[text]);\n    }\n  }, {\n    key: 'removeSource',\n    value: function removeSource(text, options) {\n      options.sourceManager.unsubscribe(this._sources[text]);\n      (0, _component.destroyPhrase)({ phrase: this._phrases[text], options: options });\n\n      delete this._sources[text];\n      delete this._phrases[text];\n      delete this._lastSourceVersions[text];\n    }\n  }, {\n    key: '_handleParse',\n    value: _regeneratorRuntime.mark(function _handleParse(input, options) {\n      var successes, substringOpts, iterations, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _ret;\n\n      return _regeneratorRuntime.wrap(function _handleParse$(context$2$0) {\n        var _this2 = this;\n\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            successes = 0;\n            substringOpts = {\n              splitOn: this.props.splitOn,\n              noSplit: this.props.consumeAll,\n              reverse: this.props.greedy\n            };\n            iterations = input.text == null ? ['�'] : (0, _stringUtils.substrings)(input.text, substringOpts);\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 6;\n            _loop = _regeneratorRuntime.mark(function callee$2$0() {\n              var substring, success, sourceDescriptor, source, descriptor, output;\n              return _regeneratorRuntime.wrap(function callee$2$0$(context$3$0) {\n                var _this = this;\n\n                while (1) switch (context$3$0.prev = context$3$0.next) {\n                  case 0:\n                    substring = _step.value;\n                    success = false;\n\n                    if (!this._sources[substring]) {\n                      sourceDescriptor = this.props.observe(substring === '�' ? undefined : substring);\n\n                      if (sourceDescriptor) {\n                        source = options.sourceManager.subscribe(sourceDescriptor);\n\n                        options.scheduleDeactivateCallback(function () {\n                          _this.removeSource(substring, options);\n                        });\n                        this._sources[substring] = source;\n                        this._lastSourceVersions[substring] = options.sourceManager.getDataVersion(source);\n                      }\n                    }\n\n                    descriptor = this.props.describe(this._sources[substring] ? this._sources[substring].data : undefined);\n\n                    this._phrases[substring] = (0, _reconcile.reconcile)({ descriptor: descriptor, phrase: this._phrases[substring], options: options });\n\n                    if (!this._phrases[substring]) {\n                      context$3$0.next = 41;\n                      break;\n                    }\n\n                    _iteratorNormalCompletion2 = true;\n                    _didIteratorError2 = false;\n                    _iteratorError2 = undefined;\n                    context$3$0.prev = 9;\n                    _iterator2 = _getIterator((0, _parse.parse)({ phrase: this._phrases[substring], input: input, options: options }));\n\n                  case 11:\n                    if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                      context$3$0.next = 23;\n                      break;\n                    }\n\n                    output = _step2.value;\n\n                    if (!this.props.limit) {\n                      context$3$0.next = 18;\n                      break;\n                    }\n\n                    context$3$0.next = 16;\n                    return _lodash2['default'].assign({}, output, { callbacks: output.callbacks.concat(function () {\n                        return success = true;\n                      }) });\n\n                  case 16:\n                    context$3$0.next = 20;\n                    break;\n\n                  case 18:\n                    context$3$0.next = 20;\n                    return output;\n\n                  case 20:\n                    _iteratorNormalCompletion2 = true;\n                    context$3$0.next = 11;\n                    break;\n\n                  case 23:\n                    context$3$0.next = 29;\n                    break;\n\n                  case 25:\n                    context$3$0.prev = 25;\n                    context$3$0.t0 = context$3$0['catch'](9);\n                    _didIteratorError2 = true;\n                    _iteratorError2 = context$3$0.t0;\n\n                  case 29:\n                    context$3$0.prev = 29;\n                    context$3$0.prev = 30;\n\n                    if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n                      _iterator2['return']();\n                    }\n\n                  case 32:\n                    context$3$0.prev = 32;\n\n                    if (!_didIteratorError2) {\n                      context$3$0.next = 35;\n                      break;\n                    }\n\n                    throw _iteratorError2;\n\n                  case 35:\n                    return context$3$0.finish(32);\n\n                  case 36:\n                    return context$3$0.finish(29);\n\n                  case 37:\n                    if (!this.props.limit) {\n                      context$3$0.next = 41;\n                      break;\n                    }\n\n                    if (success) successes++;\n\n                    if (!(this.props.limit <= successes)) {\n                      context$3$0.next = 41;\n                      break;\n                    }\n\n                    return context$3$0.abrupt('return', 'break');\n\n                  case 41:\n                  case 'end':\n                    return context$3$0.stop();\n                }\n              }, callee$2$0, _this2, [[9, 25, 29, 37], [30,, 32, 36]]);\n            });\n            _iterator = _getIterator(iterations);\n\n          case 9:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 17;\n              break;\n            }\n\n            return context$2$0.delegateYield(_loop(), 't0', 11);\n\n          case 11:\n            _ret = context$2$0.t0;\n\n            if (!(_ret === 'break')) {\n              context$2$0.next = 14;\n              break;\n            }\n\n            return context$2$0.abrupt('break', 17);\n\n          case 14:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 9;\n            break;\n\n          case 17:\n            context$2$0.next = 23;\n            break;\n\n          case 19:\n            context$2$0.prev = 19;\n            context$2$0.t1 = context$2$0['catch'](6);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t1;\n\n          case 23:\n            context$2$0.prev = 23;\n            context$2$0.prev = 24;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 26:\n            context$2$0.prev = 26;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 29;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 29:\n            return context$2$0.finish(26);\n\n          case 30:\n            return context$2$0.finish(23);\n\n          case 31:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, _handleParse, this, [[6, 19, 23, 31], [24,, 26, 30]]);\n    })\n  }], [{\n    key: 'defaultProps',\n    value: {\n      splitOn: '',\n      consumeAll: false\n    },\n    enumerable: true\n  }]);\n\n  return Dynamic;\n})(_laconaPhrase.Phrase);\n\nexports.Dynamic = Dynamic;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/component.js":"'use strict';\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nvar _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getConstructor = getConstructor;\nexports.addSource = addSource;\nexports.removeSource = removeSource;\nexports.getRealProps = getRealProps;\nexports.instantiate = instantiate;\nexports.destroyPhrase = destroyPhrase;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _elements = require('./elements');\n\nvar builtinPhrases = _interopRequireWildcard(_elements);\n\nvar _sources = require('./sources');\n\nvar builtinSources = _interopRequireWildcard(_sources);\n\nvar _error = require('./error');\n\nfunction getConstructor(_ref) {\n  var Constructor = _ref.Constructor;\n  var type = _ref.type;\n\n  if (_lodash2['default'].isString(Constructor)) {\n    var builtins = getBuiltinsForType(type);\n\n    if (_lodash2['default'].has(builtins, Constructor)) {\n      return builtins[Constructor];\n    } else {\n      throw new _error.LaconaError(Constructor + ' is an invalid phrase. Note: non-builtin phrases must be uppercase');\n    }\n  } else {\n    assertValid({ Constructor: Constructor, type: type });\n  }\n  return Constructor;\n}\n\nfunction addSource(_ref2) {\n  var component = _ref2.component;\n  var options = _ref2.options;\n\n  if (component.observe) {\n    var sourceDescriptor = component.observe();\n    if (sourceDescriptor) {\n      var source = options.sourceManager.subscribe(sourceDescriptor);\n      component.__lastSourceVersion = 0;\n\n      component.source = source;\n    }\n  }\n}\n\nfunction removeSource(_ref3) {\n  var component = _ref3.component;\n  var options = _ref3.options;\n\n  if (component.source) {\n    options.sourceManager.unsubscribe(component.source);\n    delete component.source;\n  }\n}\n\nfunction subclassOf(Constructor, DesiredSuperclass) {\n  return Constructor.prototype instanceof DesiredSuperclass;\n}\n\nfunction assertValid(_ref4) {\n  var Constructor = _ref4.Constructor;\n  var type = _ref4.type;\n\n  if (!_lodash2['default'].isFunction(Constructor)) {\n    throw new _error.LaconaError('Constructor ' + Constructor + ' is not a valid ' + type);\n  }\n\n  if (type === 'phrase') {\n    if (Constructor.prototype.describe) {} else if (Constructor.translations) {\n      if (!_lodash2['default'].every(Constructor.translations, _lodash2['default'].partial(_lodash2['default'].has, _lodash2['default'], 'describe'))) {\n        throw new _error.LaconaError('Every translation must have a describe method');\n      }\n      if (!_lodash2['default'].every(Constructor.translations, _lodash2['default'].partial(_lodash2['default'].has, _lodash2['default'], 'langs'))) {\n        throw new _error.LaconaError('Every translation must have a langs property');\n      }\n      if (!_lodash2['default'].some(Constructor.translations, function (translation) {\n        return _lodash2['default'].indexOf(translation.langs, 'default') > -1;\n      })) {\n        throw new _error.LaconaError('All elements must have a describe method defined for the default language');\n      }\n    }\n  }\n}\n\nfunction getBuiltinsForType(type) {\n  if (type === 'phrase') {\n    return builtinPhrases;\n  } else if (type === 'source') {\n    return builtinSources;\n  } else {\n    throw new _error.LaconaError(type + ' is an invalid constructor type.');\n  }\n}\n\nfunction getRealProps(_ref5) {\n  var descriptor = _ref5.descriptor;\n  var Constructor = _ref5.Constructor;\n\n  var realProps = _lodash2['default'].defaults(descriptor.props || {}, Constructor.defaultProps || {});\n  if (descriptor.children && descriptor.children.length > 0) {\n    realProps.children = _lodash2['default'].flattenDeep(descriptor.children);\n  }\n  return realProps;\n}\n\nfunction instantiate(_ref6) {\n  var Constructor = _ref6.Constructor;\n  var props = _ref6.props;\n\n  return new Constructor({ props: props });\n}\n\nfunction destroyPhrase(_ref7) {\n  var phrase = _ref7.phrase;\n  var options = _ref7.options;\n\n  if (phrase) {\n    if (phrase._handleParse) {\n      var destroyCall = function destroyCall(phrase) {\n        destroyPhrase({ phrase: phrase, options: options });\n      };\n\n      phrase._destroy(destroyCall);\n    }\n\n    removeSource({ component: phrase, options: options });\n  }\n}","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/sources/index.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _map = require('./map');\n\nObject.defineProperty(exports, 'map', {\n  enumerable: true,\n  get: function get() {\n    return _map.MapPhrase;\n  }\n});","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/sources/map.js":"'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar MapPhrase = (function (_Source) {\n  _inherits(MapPhrase, _Source);\n\n  function MapPhrase() {\n    _classCallCheck(this, MapPhrase);\n\n    _get(Object.getPrototypeOf(MapPhrase.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(MapPhrase, [{\n    key: 'observe',\n    value: function observe() {\n      return this.props.children[0];\n    }\n  }, {\n    key: 'onCreate',\n    value: function onCreate() {\n      this.onUpdate();\n    }\n  }, {\n    key: 'trigger',\n    value: function trigger() {\n      var _source;\n\n      (_source = this.source).trigger.apply(_source, arguments);\n    }\n  }, {\n    key: 'onUpdate',\n    value: function onUpdate() {\n      var data = this.props['function'](this.source.data);\n      this.setData(data);\n    }\n  }]);\n\n  return MapPhrase;\n})(_laconaPhrase.Source);\n\nexports.MapPhrase = MapPhrase;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/error.js":"'use strict';\n\nvar _Object$create = require('babel-runtime/core-js/object/create')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.LaconaError = LaconaError;\n\nfunction LaconaError() {\n  var temp = Error.apply(this, arguments);\n  temp.name = this.name = 'LaconaError';\n  this.stack = temp.stack;\n  this.message = temp.message;\n}\n\nLaconaError.prototype = _Object$create(Error.prototype, {\n  constructor: {\n    value: LaconaError,\n    writable: true,\n    configurable: true\n  }\n});","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/string-utils.js":"'use strict';\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.substrings = substrings;\nvar marked0$0 = [substrings].map(_regeneratorRuntime.mark);\n\nvar _smartSplit = require('smart-split');\n\nvar _smartSplit2 = _interopRequireDefault(_smartSplit);\n\nfunction substrings(input, _ref) {\n  var splitOn = _ref.splitOn;\n  var noSplit = _ref.noSplit;\n  var reverse = _ref.reverse;\n  var inputs, i;\n  return _regeneratorRuntime.wrap(function substrings$(context$1$0) {\n    while (1) switch (context$1$0.prev = context$1$0.next) {\n      case 0:\n        if (!noSplit) {\n          context$1$0.next = 4;\n          break;\n        }\n\n        context$1$0.next = 3;\n        return input;\n\n      case 3:\n        return context$1$0.abrupt('return');\n\n      case 4:\n        inputs = (0, _smartSplit2['default'])(input, splitOn);\n        i = 0;\n\n      case 6:\n        if (!(i < inputs.length)) {\n          context$1$0.next = 17;\n          break;\n        }\n\n        if (!reverse) {\n          context$1$0.next = 12;\n          break;\n        }\n\n        context$1$0.next = 10;\n        return inputs.slice(0, inputs.length - i).join('');\n\n      case 10:\n        context$1$0.next = 14;\n        break;\n\n      case 12:\n        context$1$0.next = 14;\n        return inputs.slice(0, i + 1).join('');\n\n      case 14:\n        i += 2;\n        context$1$0.next = 6;\n        break;\n\n      case 17:\n      case 'end':\n        return context$1$0.stop();\n    }\n  }, marked0$0[0], this);\n}","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/label.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _parse = require('../parse');\n\nvar _reconcile = require('../reconcile');\n\nvar Label = (function (_Phrase) {\n  _inherits(Label, _Phrase);\n\n  function Label() {\n    _classCallCheck(this, Label);\n\n    _get(Object.getPrototypeOf(Label.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Label, [{\n    key: 'parseChild',\n    value: _regeneratorRuntime.mark(function parseChild(input, options) {\n      var didSetCurrentArgument, modification, inputWithArgument, didOutputSelf, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output;\n\n      return _regeneratorRuntime.wrap(function parseChild$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            didSetCurrentArgument = false;\n            modification = {};\n\n            if (this.props.argument && !input.currentArgument) {\n              modification.currentArgument = this.props.text;\n              didSetCurrentArgument = true;\n            }\n\n            inputWithArgument = _lodash2['default'].assign({}, input, modification);\n            didOutputSelf = false;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 8;\n            _iterator = _getIterator((0, _parse.parse)({ phrase: this.childPhrase, input: inputWithArgument, options: options }));\n\n          case 10:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 22;\n              break;\n            }\n\n            output = _step.value;\n\n            if (!didSetCurrentArgument) {\n              context$2$0.next = 17;\n              break;\n            }\n\n            context$2$0.next = 15;\n            return _lodash2['default'].assign({}, output, { currentArgument: undefined });\n\n          case 15:\n            context$2$0.next = 19;\n            break;\n\n          case 17:\n            context$2$0.next = 19;\n            return output;\n\n          case 19:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 10;\n            break;\n\n          case 22:\n            context$2$0.next = 28;\n            break;\n\n          case 24:\n            context$2$0.prev = 24;\n            context$2$0.t0 = context$2$0['catch'](8);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t0;\n\n          case 28:\n            context$2$0.prev = 28;\n            context$2$0.prev = 29;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 31:\n            context$2$0.prev = 31;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 34;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 34:\n            return context$2$0.finish(31);\n\n          case 35:\n            return context$2$0.finish(28);\n\n          case 36:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, parseChild, this, [[8, 24, 28, 36], [29,, 31, 35]]);\n    })\n  }, {\n    key: 'outputSelf',\n    value: function outputSelf(input, options) {\n      var word = {\n        text: this.props.text,\n        input: false,\n        placeholder: true,\n        argument: input.currentArgument || (this.props.argument ? this.props.text : undefined)\n      };\n\n      var modification = {\n        score: 0.01,\n        result: undefined,\n        text: null\n      };\n\n      modification.words = input.words.concat(word);\n\n      return _lodash2['default'].assign({}, input, modification);\n    }\n  }, {\n    key: '_handleParse',\n    value: _regeneratorRuntime.mark(function _handleParse(input, options) {\n      return _regeneratorRuntime.wrap(function _handleParse$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            this.childPhrase = (0, _reconcile.reconcile)({ descriptor: this.props.children[0], phrase: this.childPhrase, options: options });\n\n            if (!(this.props.suppress && (input.text == null || this.props.suppressEmpty && input.text === '' || this.props.suppressWhen && this.props.suppressWhen(input.text)))) {\n              context$2$0.next = 6;\n              break;\n            }\n\n            context$2$0.next = 4;\n            return this.outputSelf(input, options);\n\n          case 4:\n            context$2$0.next = 7;\n            break;\n\n          case 6:\n            return context$2$0.delegateYield(this.parseChild(input, options), 't0', 7);\n\n          case 7:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, _handleParse, this);\n    })\n  }, {\n    key: '_destroy',\n    value: function _destroy(destroy) {\n      destroy(this.childPhrase);\n\n      delete this.childPhrase;\n    }\n  }], [{\n    key: 'defaultProps',\n    value: {\n      suppress: true,\n      argument: true,\n      suppressEmpty: true\n    },\n    enumerable: true\n  }]);\n\n  return Label;\n})(_laconaPhrase.Phrase);\n\nexports.Label = Label;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/filter.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar Filter = (function (_Phrase) {\n  _inherits(Filter, _Phrase);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    _get(Object.getPrototypeOf(Filter.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Filter, [{\n    key: 'validate',\n    value: function validate(result) {\n      return this.props['function'](result);\n    }\n  }, {\n    key: 'describe',\n    value: function describe() {\n      return this.props.children[0];\n    }\n  }]);\n\n  return Filter;\n})(_laconaPhrase.Phrase);\n\nexports.Filter = Filter;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/freetext.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _stringUtils = require('../string-utils');\n\nvar Freetext = (function (_Phrase) {\n  _inherits(Freetext, _Phrase);\n\n  function Freetext() {\n    _classCallCheck(this, Freetext);\n\n    _get(Object.getPrototypeOf(Freetext.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Freetext, [{\n    key: 'filter',\n    value: _regeneratorRuntime.mark(function filter(input) {\n      var substringOpts, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, stringPart;\n\n      return _regeneratorRuntime.wrap(function filter$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            substringOpts = {\n              splitOn: this.props.splitOn,\n              noSplit: this.props.consumeAll,\n              reverse: this.props.greedy\n            };\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 4;\n            _iterator = _getIterator((0, _stringUtils.substrings)(input, substringOpts));\n\n          case 6:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 14;\n              break;\n            }\n\n            stringPart = _step.value;\n\n            if (!this.props.filter(stringPart)) {\n              context$2$0.next = 11;\n              break;\n            }\n\n            context$2$0.next = 11;\n            return {\n              words: [{ text: stringPart, input: true }],\n              result: stringPart,\n              remaining: input.substring(stringPart.length),\n              score: 0.1 + 1 / (stringPart.length + 2)\n            };\n\n          case 11:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 6;\n            break;\n\n          case 14:\n            context$2$0.next = 20;\n            break;\n\n          case 16:\n            context$2$0.prev = 16;\n            context$2$0.t0 = context$2$0['catch'](4);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t0;\n\n          case 20:\n            context$2$0.prev = 20;\n            context$2$0.prev = 21;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 23:\n            context$2$0.prev = 23;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 26;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 26:\n            return context$2$0.finish(23);\n\n          case 27:\n            return context$2$0.finish(20);\n\n          case 28:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, filter, this, [[4, 16, 20, 28], [21,, 23, 27]]);\n    })\n  }, {\n    key: 'describe',\n    value: function describe() {\n      return (0, _laconaPhrase.createElement)('raw', { 'function': this.filter.bind(this), limit: this.props.limit });\n    }\n  }], [{\n    key: 'defaultProps',\n    value: {\n      filter: function filter() {\n        return true;\n      },\n      splitOn: '',\n      consumeAll: false\n    },\n    enumerable: true\n  }]);\n\n  return Freetext;\n})(_laconaPhrase.Phrase);\n\nexports.Freetext = Freetext;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/list.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _Array$from = require('babel-runtime/core-js/array/from')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _stringMatch = require('../string-match');\n\nvar List = (function (_Phrase) {\n  _inherits(List, _Phrase);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    _get(Object.getPrototypeOf(List.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(List, [{\n    key: 'itemify',\n    value: function itemify(item) {\n      return _lodash2['default'].isString(item) ? { text: item } : item;\n    }\n  }, {\n    key: 'doMatch',\n    value: _regeneratorRuntime.mark(function doMatch(items, input) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, output;\n\n      return _regeneratorRuntime.wrap(function doMatch$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 3;\n            _iterator = _getIterator(items);\n\n          case 5:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 38;\n              break;\n            }\n\n            item = _step.value;\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            context$2$0.prev = 10;\n            _iterator2 = _getIterator((0, _stringMatch.match)({ input: input, text: item.text, fuzzy: this.props.fuzzy }));\n\n          case 12:\n            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n              context$2$0.next = 21;\n              break;\n            }\n\n            output = _step2.value;\n\n            output.result = item.value;\n            output.qualifiers = item.qualifiers;\n            context$2$0.next = 18;\n            return output;\n\n          case 18:\n            _iteratorNormalCompletion2 = true;\n            context$2$0.next = 12;\n            break;\n\n          case 21:\n            context$2$0.next = 27;\n            break;\n\n          case 23:\n            context$2$0.prev = 23;\n            context$2$0.t0 = context$2$0['catch'](10);\n            _didIteratorError2 = true;\n            _iteratorError2 = context$2$0.t0;\n\n          case 27:\n            context$2$0.prev = 27;\n            context$2$0.prev = 28;\n\n            if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n              _iterator2['return']();\n            }\n\n          case 30:\n            context$2$0.prev = 30;\n\n            if (!_didIteratorError2) {\n              context$2$0.next = 33;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 33:\n            return context$2$0.finish(30);\n\n          case 34:\n            return context$2$0.finish(27);\n\n          case 35:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 5;\n            break;\n\n          case 38:\n            context$2$0.next = 44;\n            break;\n\n          case 40:\n            context$2$0.prev = 40;\n            context$2$0.t1 = context$2$0['catch'](3);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t1;\n\n          case 44:\n            context$2$0.prev = 44;\n            context$2$0.prev = 45;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 47:\n            context$2$0.prev = 47;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 50;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 50:\n            return context$2$0.finish(47);\n\n          case 51:\n            return context$2$0.finish(44);\n\n          case 52:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, doMatch, this, [[3, 40, 44, 52], [10, 23, 27, 35], [28,, 30, 34], [45,, 47, 51]]);\n    })\n  }, {\n    key: 'compute',\n    value: _regeneratorRuntime.mark(function compute(items, input) {\n      var resultIterator, sortedResults;\n      return _regeneratorRuntime.wrap(function compute$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            resultIterator = this.doMatch(items, input);\n\n            if (!this.props.fuzzy) {\n              context$2$0.next = 6;\n              break;\n            }\n\n            sortedResults = _lodash2['default'].chain(_Array$from(resultIterator)).sortBy(function (_ref) {\n              var score = _ref.score;\n              return -score;\n            }).value();\n            return context$2$0.delegateYield(sortedResults, 't0', 4);\n\n          case 4:\n            context$2$0.next = 7;\n            break;\n\n          case 6:\n            return context$2$0.delegateYield(resultIterator, 't1', 7);\n\n          case 7:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, compute, this);\n    })\n  }, {\n    key: 'describe',\n\n    // if (_.startsWith(input.toLowerCase(), item.text.toLowerCase())) {\n    //   const qualifiers = item.qualifiers\n    //     ? item.qualifiers\n    //     : item.qualifier ? [item.qualifier] : []\n    //\n    //   yield {\n    //     remaining: input.slice(item.text.length),\n    //     words: [{text: item.text, input: true}],\n    //     result: item.value,\n    //     qualifiers\n    //   }\n    // } else {\n    //   if (this.props.fuzzy) {\n    //     itemsForFuzzy.push(item)\n    //   }\n    // }\n\n    // if (this.props.fuzzy) {\n    //   for (let result of sort(input, itemsForFuzzy)) {\n    //     result.remaining = ''\n    //\n    //     yield result\n    //   }\n    // }\n    value: function describe() {\n      // if (this.props.fuzzy) {\n      var trueItems = _lodash2['default'].map(this.props.items, this.itemify.bind(this));\n\n      return (0, _laconaPhrase.createElement)('raw', { 'function': this.compute.bind(this, trueItems), limit: this.props.limit, category: this.props.category });\n      // } else {\n      //   const literals = _.chain(this.props.items)\n      //     .map(this.itemify.bind(this))\n      //     .map(item => <literal text={item.text} value={item.value} qualifier={item.qualifier} category={this.props.category} />)\n      //     .value()\n      //\n      //   return (\n      //     <choice limit={this.props.limit} value={this.props.value}>\n      //       {literals}\n      //     </choice>\n      //   )\n      // }\n    }\n  }]);\n\n  return List;\n})(_laconaPhrase.Phrase);\n\nexports.List = List;\n\n// TODO - this could be optimized\n//  Right now it is going to do fuzzy matching for every single item\n//  much of this processing could be eliminated if it ran the\n//  non-fuzzy (score 1) parses first, and then did the fuzzy (score 0.5)\n//  parses","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/string-match.js":"'use strict';\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.match = match;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\n// returns a `words` object if its a match, else null\n\nfunction match(_ref) {\n  var input = _ref.input;\n  var text = _ref.text;\n  var _ref$fuzzy = _ref.fuzzy;\n  var fuzzy = _ref$fuzzy === undefined ? false : _ref$fuzzy;\n\n  var nullInput = nullMatch({ input: input, text: text });\n  if (nullInput) return nullInput;\n\n  var inputLower = input.toLowerCase();\n  var textLower = text.toLowerCase();\n\n  var partialBeginning = partialBeginningMatch({ input: input, text: text, inputLower: inputLower, textLower: textLower });\n  if (partialBeginning) return partialBeginning;\n\n  var fullBeginning = fullBeginningMatch({ input: input, text: text, inputLower: inputLower, textLower: textLower });\n  if (fullBeginning) return fullBeginning;\n\n  if (fuzzy) {\n    var anywhere = anywhereMatch({ input: input, text: text, inputLower: inputLower, textLower: textLower });\n    if (anywhere) return anywhere;\n  }\n\n  // const fullFuzzy = fuzzyMatch({input, text})\n  // if (fullFuzzy) return {words: fullFuzzy, score: 0.25}\n\n  return [];\n}\n\nfunction nullMatch(_ref2) {\n  var input = _ref2.input;\n  var text = _ref2.text;\n\n  if (input == null) {\n    return [{\n      words: [{ text: text, input: false }],\n      remaining: null,\n      score: 1\n    }];\n  }\n}\n\nfunction partialBeginningMatch(_ref3) {\n  var input = _ref3.input;\n  var text = _ref3.text;\n  var inputLower = _ref3.inputLower;\n  var textLower = _ref3.textLower;\n\n  if (_lodash2['default'].startsWith(inputLower, textLower)) {\n    return [{\n      words: [{ text: text, input: true }],\n      remaining: input.substring(text.length),\n      score: 1\n    }];\n  }\n}\n\nfunction fullBeginningMatch(_ref4) {\n  var input = _ref4.input;\n  var text = _ref4.text;\n  var inputLower = _ref4.inputLower;\n  var textLower = _ref4.textLower;\n\n  if (_lodash2['default'].startsWith(textLower, inputLower)) {\n    var words = [];\n    if (input.length > 0) {\n      words.push({ text: text.substring(0, input.length), input: true });\n    }\n    if (text.length > input.length) {\n      words.push({ text: text.substring(input.length), input: false });\n    }\n\n    return [{\n      words: words,\n      remaining: null,\n      score: 1\n    }];\n  }\n}\n\n// export function * sort (input, items) {\n//   let itemSet = _.map(items, item => ({item, matched: false}))\n//\n//   for (let [func, score] of [[beginningMatch, 1], [anywhereMatch, 0.5]]) {\n//     yield* sortFunction({input, itemSet, func, score})\n//   }\n// }\n//\n// function * sortFunction ({input, itemSet, func, score}) {\n//   for (let obj of itemSet) {\n//     if (!obj.matched) {\n//       const words = func({input, text: obj.item.text, qualifier: obj.item.qualifier})\n//       if (words) {\n//         obj.matched = true\n//         _.forEach(words, word => word.descriptor = obj.item.descriptor)\n//         yield {words, result: obj.item.value, score}\n//       }\n//     }\n//   }\n// }\n//\n// escape special characters, and wrap in parens (for matching)\n// function regexEscape (str) {\n//   return `(${str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/, '\\\\$&')})`\n// }\n\n// function beginningMatch ({input, text, qualifier}) {\n//   if (_.startsWith(text.toLowerCase(), input.toLowerCase())) {\n//     const matches = [{text: text.slice(0, input.length), input: true, qualifier}]\n//     if (input.length < text.length) {\n//       matches.push({text: text.slice(input.length), input: false, qualifier})\n//     }\n//     return matches\n//   }\n//   return null\n// }\n\nfunction anywhereMatch(_ref5) {\n  var input = _ref5.input;\n  var text = _ref5.text;\n  var inputLower = _ref5.inputLower;\n  var textLower = _ref5.textLower;\n\n  var index = textLower.indexOf(inputLower);\n\n  if (index > -1) {\n    var words = [];\n    var endIndex = index + input.length;\n\n    if (index > 0) {\n      words.push({ text: text.slice(0, index), input: false });\n    }\n\n    words.push({ text: text.slice(index, endIndex), input: true });\n\n    if (endIndex <= text.length - 1) {\n      words.push({ text: text.slice(endIndex), input: false });\n    }\n\n    return [{\n      words: words,\n      remaining: null,\n      score: 0.5\n    }];\n  }\n\n  return [];\n}\n\n// function fuzzyMatch({input, text}) {\n//   const chars = regexSplit(input)\n//   const fuzzyString = chars.reduce((a, b) => (`${a}([^${b}]*)${b}`), '^') + '(.*)$'\n//   const fuzzyRegex = new RegExp(fuzzyString, 'i')\n//   const fuzzyMatches = text.match(fuzzyRegex)\n//\n//   if (fuzzyMatches) {\n//     const words = []\n//     for (let i = 1, l = fuzzyMatches.length; i < l; i++) {\n//       if (fuzzyMatches[i].length > 0) {\n//         words.push({\n//           text: fuzzyMatches[i],\n//           input: i % 2 === 0\n//         })\n//       }\n//     }\n//     return words\n//   }\n//   return null\n// }","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/literal.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _stringMatch = require('../string-match');\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar Literal = (function (_Phrase) {\n  _inherits(Literal, _Phrase);\n\n  function Literal() {\n    _classCallCheck(this, Literal);\n\n    _get(Object.getPrototypeOf(Literal.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Literal, [{\n    key: 'compute',\n    value: function compute(input) {\n      if (this.props.text == null) return [];\n\n      var result = (0, _stringMatch.match)({ input: input, text: this.props.text, fuzzy: this.props.fuzzy });\n      return result;\n    }\n  }, {\n    key: 'decorate',\n    value: function decorate(input) {\n      if (input == null || input === '') {\n        return [];\n      } else {\n        return [{\n          words: [{ text: this.props.text, input: false }],\n          remaining: input,\n          score: 1\n        }];\n      }\n    }\n  }, {\n    key: 'describe',\n    value: function describe() {\n      if (this.props.decorate) {\n        if (this.props.allowInput) {\n          return (0, _laconaPhrase.createElement)(\n            'choice',\n            null,\n            (0, _laconaPhrase.createElement)('literal', _extends({}, this.props, { decorate: false })),\n            (0, _laconaPhrase.createElement)('raw', { 'function': this.decorate.bind(this) })\n          );\n        } else {\n          return (0, _laconaPhrase.createElement)('raw', { 'function': this.decorate.bind(this) });\n        }\n      } else {\n        return (0, _laconaPhrase.createElement)('raw', { 'function': this.compute.bind(this), category: this.props.category });\n      }\n    }\n  }], [{\n    key: 'defaultProps',\n    value: {\n      fuzzy: false,\n      allowInput: true\n    },\n    enumerable: true\n  }]);\n\n  return Literal;\n})(_laconaPhrase.Phrase);\n\nexports.Literal = Literal;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/map.js":"'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _reconcile = require('../reconcile');\n\nvar _parse = require('../parse');\n\nfunction hasPlaceholder(output) {\n  return _lodash2['default'].any(output.words, 'placeholder');\n}\n\nvar MapPhrase = (function (_Phrase) {\n  _inherits(MapPhrase, _Phrase);\n\n  function MapPhrase() {\n    _classCallCheck(this, MapPhrase);\n\n    _get(Object.getPrototypeOf(MapPhrase.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(MapPhrase, [{\n    key: '_handleParse',\n    value: _regeneratorRuntime.mark(function _handleParse(input, options) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output, newResult, modifications, successes, newIterator, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, success;\n\n      return _regeneratorRuntime.wrap(function _handleParse$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            if (!(this.props.children && this.props.children.length > 0)) {\n              context$2$0.next = 74;\n              break;\n            }\n\n            this.childPhrase = (0, _reconcile.reconcile)({ descriptor: this.props.children[0], phrase: this.childPhrase, options: options });\n\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 5;\n            _iterator = _getIterator((0, _parse.parse)({ phrase: this.childPhrase, input: input, options: options }));\n\n          case 7:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 60;\n              break;\n            }\n\n            output = _step.value;\n\n            if (!hasPlaceholder(output)) {\n              context$2$0.next = 14;\n              break;\n            }\n\n            context$2$0.next = 12;\n            return output;\n\n          case 12:\n            context$2$0.next = 57;\n            break;\n\n          case 14:\n            if (!this.props['function']) {\n              context$2$0.next = 21;\n              break;\n            }\n\n            newResult = this.props['function'](output.result);\n            modifications = { result: newResult };\n            context$2$0.next = 19;\n            return _lodash2['default'].assign({}, output, modifications);\n\n          case 19:\n            context$2$0.next = 57;\n            break;\n\n          case 21:\n            if (!this.props.iteratorFunction) {\n              context$2$0.next = 57;\n              break;\n            }\n\n            successes = 0;\n            newIterator = this.props.iteratorFunction(output.result);\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            context$2$0.prev = 27;\n            _iterator2 = _getIterator(newIterator);\n\n          case 29:\n            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n              context$2$0.next = 43;\n              break;\n            }\n\n            newResult = _step2.value;\n            success = false;\n            modifications = { result: newResult };\n\n            if (this.props.limit) {\n              modifications.callbacks = output.callbacks.concat(function () {\n                return success = true;\n              });\n            }\n\n            context$2$0.next = 36;\n            return _lodash2['default'].assign({}, output, modifications);\n\n          case 36:\n            if (!this.props.limit) {\n              context$2$0.next = 40;\n              break;\n            }\n\n            if (success) successes++;\n\n            if (!(this.props.limit <= successes)) {\n              context$2$0.next = 40;\n              break;\n            }\n\n            return context$2$0.abrupt('break', 43);\n\n          case 40:\n            _iteratorNormalCompletion2 = true;\n            context$2$0.next = 29;\n            break;\n\n          case 43:\n            context$2$0.next = 49;\n            break;\n\n          case 45:\n            context$2$0.prev = 45;\n            context$2$0.t0 = context$2$0['catch'](27);\n            _didIteratorError2 = true;\n            _iteratorError2 = context$2$0.t0;\n\n          case 49:\n            context$2$0.prev = 49;\n            context$2$0.prev = 50;\n\n            if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n              _iterator2['return']();\n            }\n\n          case 52:\n            context$2$0.prev = 52;\n\n            if (!_didIteratorError2) {\n              context$2$0.next = 55;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 55:\n            return context$2$0.finish(52);\n\n          case 56:\n            return context$2$0.finish(49);\n\n          case 57:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 7;\n            break;\n\n          case 60:\n            context$2$0.next = 66;\n            break;\n\n          case 62:\n            context$2$0.prev = 62;\n            context$2$0.t1 = context$2$0['catch'](5);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t1;\n\n          case 66:\n            context$2$0.prev = 66;\n            context$2$0.prev = 67;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 69:\n            context$2$0.prev = 69;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 72;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 72:\n            return context$2$0.finish(69);\n\n          case 73:\n            return context$2$0.finish(66);\n\n          case 74:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, _handleParse, this, [[5, 62, 66, 74], [27, 45, 49, 57], [50,, 52, 56], [67,, 69, 73]]);\n    })\n  }, {\n    key: '_destroy',\n    value: function _destroy(destroy) {\n      destroy(this.childPhrase);\n\n      delete this.childPhrase;\n    }\n  }]);\n\n  return MapPhrase;\n})(_laconaPhrase.Phrase);\n\nexports.MapPhrase = MapPhrase;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/raw.js":"'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar Raw = (function (_Phrase) {\n  _inherits(Raw, _Phrase);\n\n  function Raw() {\n    _classCallCheck(this, Raw);\n\n    _get(Object.getPrototypeOf(Raw.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Raw, [{\n    key: '_handleParse',\n    value: _regeneratorRuntime.mark(function _handleParse(input, options) {\n      var successes, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output, success, modification;\n\n      return _regeneratorRuntime.wrap(function _handleParse$(context$2$0) {\n        var _this = this;\n\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            successes = 0;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 4;\n            _iterator = _getIterator(this.props['function'](input.text));\n\n          case 6:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 21;\n              break;\n            }\n\n            output = _step.value;\n            success = false;\n            modification = {\n              result: output.result,\n              text: output.remaining,\n              score: output.score || 1,\n              qualifiers: output.qualifiers || [],\n              words: input.words.concat(_lodash2['default'].map(output.words, function (word) {\n                return _lodash2['default'].assign(word, {\n                  argument: input.currentArgument,\n                  category: _this.props.category\n                });\n              }))\n            };\n\n            if (this.props.limit) modification.callbacks = input.callbacks.concat(function () {\n              return success = true;\n            });\n            if (output.ellipsis) modification.ellipsis = true;\n\n            context$2$0.next = 14;\n            return _lodash2['default'].assign({}, input, modification);\n\n          case 14:\n            if (!this.props.limit) {\n              context$2$0.next = 18;\n              break;\n            }\n\n            if (success) successes++;\n\n            if (!(this.props.limit <= successes)) {\n              context$2$0.next = 18;\n              break;\n            }\n\n            return context$2$0.abrupt('break', 21);\n\n          case 18:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 6;\n            break;\n\n          case 21:\n            context$2$0.next = 27;\n            break;\n\n          case 23:\n            context$2$0.prev = 23;\n            context$2$0.t0 = context$2$0['catch'](4);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t0;\n\n          case 27:\n            context$2$0.prev = 27;\n            context$2$0.prev = 28;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 30:\n            context$2$0.prev = 30;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 33;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 33:\n            return context$2$0.finish(30);\n\n          case 34:\n            return context$2$0.finish(27);\n\n          case 35:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, _handleParse, this, [[4, 23, 27, 35], [28,, 30, 34]]);\n    })\n  }], [{\n    key: 'defaultProps',\n    value: {\n      compute: function compute() {\n        return [];\n      }\n    },\n    enumerable: true\n  }]);\n\n  return Raw;\n})(_laconaPhrase.Phrase);\n\nexports.Raw = Raw;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/repeat.js":"'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _Number$MAX_SAFE_INTEGER = require('babel-runtime/core-js/number/max-safe-integer')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _parse = require('../parse');\n\nvar _reconcile = require('../reconcile');\n\nvar Repeat = (function (_Phrase) {\n  _inherits(Repeat, _Phrase);\n\n  function Repeat() {\n    _classCallCheck(this, Repeat);\n\n    _get(Object.getPrototypeOf(Repeat.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Repeat, [{\n    key: '_handleParse',\n    value: _regeneratorRuntime.mark(function _handleParse(input, options) {\n      var modifications, trueInput;\n      return _regeneratorRuntime.wrap(function _handleParse$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            this.child = (0, _reconcile.reconcile)({ descriptor: this.props.children[0], phrase: this.child, options: options });\n            this.separator = this.props.separator ? (0, _reconcile.reconcile)({ descriptor: this.props.separator, phrase: this.separator, options: options }) : null;\n\n            modifications = {\n              result: [],\n              score: 1\n            };\n            trueInput = _lodash2['default'].assign({}, input, modifications);\n            return context$2$0.delegateYield(this.parseChild(0, trueInput, options), 't0', 5);\n\n          case 5:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, _handleParse, this);\n    })\n  }, {\n    key: 'parseChild',\n    value: _regeneratorRuntime.mark(function parseChild(childIndex, input, options) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, sepOutput, trueOutput;\n\n      return _regeneratorRuntime.wrap(function parseChild$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            if (!(childIndex > this.props.max)) {\n              context$2$0.next = 2;\n              break;\n            }\n\n            return context$2$0.abrupt('return');\n\n          case 2:\n            if (!(childIndex >= this.props.min)) {\n              context$2$0.next = 10;\n              break;\n            }\n\n            if (!(childIndex < this.props.max)) {\n              context$2$0.next = 8;\n              break;\n            }\n\n            context$2$0.next = 6;\n            return _lodash2['default'].assign({}, input, { ellipsis: true });\n\n          case 6:\n            context$2$0.next = 10;\n            break;\n\n          case 8:\n            context$2$0.next = 10;\n            return input;\n\n          case 10:\n            if (!(childIndex >= this.props.min && input.text == null)) {\n              context$2$0.next = 12;\n              break;\n            }\n\n            return context$2$0.abrupt('return');\n\n          case 12:\n            if (!(childIndex > 0 && this.separator)) {\n              context$2$0.next = 41;\n              break;\n            }\n\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 16;\n            _iterator = _getIterator((0, _parse.parse)({ phrase: this.separator, input: input, options: options }));\n\n          case 18:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 25;\n              break;\n            }\n\n            sepOutput = _step.value;\n            trueOutput = _lodash2['default'].assign({}, sepOutput, { result: input.result });\n            return context$2$0.delegateYield(this.callParseChild(childIndex, trueOutput, options), 't0', 22);\n\n          case 22:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 18;\n            break;\n\n          case 25:\n            context$2$0.next = 31;\n            break;\n\n          case 27:\n            context$2$0.prev = 27;\n            context$2$0.t1 = context$2$0['catch'](16);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t1;\n\n          case 31:\n            context$2$0.prev = 31;\n            context$2$0.prev = 32;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 34:\n            context$2$0.prev = 34;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 37;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 37:\n            return context$2$0.finish(34);\n\n          case 38:\n            return context$2$0.finish(31);\n\n          case 39:\n            context$2$0.next = 42;\n            break;\n\n          case 41:\n            return context$2$0.delegateYield(this.callParseChild(childIndex, input, options), 't2', 42);\n\n          case 42:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, parseChild, this, [[16, 27, 31, 39], [32,, 34, 38]]);\n    })\n  }, {\n    key: 'callParseChild',\n    value: _regeneratorRuntime.mark(function callParseChild(childIndex, input, options) {\n      var inputModifications, trueInput, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, output, outputModifications, trueOutput;\n\n      return _regeneratorRuntime.wrap(function callParseChild$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            inputModifications = { qualifiers: [] };\n            trueInput = _lodash2['default'].assign({}, input, inputModifications);\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            context$2$0.prev = 5;\n            _iterator2 = _getIterator((0, _parse.parse)({ phrase: this.child, input: trueInput, options: options }));\n\n          case 7:\n            if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n              context$2$0.next = 17;\n              break;\n            }\n\n            output = _step2.value;\n\n            if (!(this.props.unique && _lodash2['default'].some(input.result, _lodash2['default'].partial(_lodash2['default'].isEqual, _lodash2['default'], output.result)))) {\n              context$2$0.next = 11;\n              break;\n            }\n\n            return context$2$0.abrupt('return');\n\n          case 11:\n            outputModifications = {\n              result: input.result.concat(output.result),\n              qualifiers: input.qualifiers.concat(output.qualifiers)\n            };\n            trueOutput = _lodash2['default'].assign({}, output, outputModifications);\n            return context$2$0.delegateYield(this.parseChild(childIndex + 1, trueOutput, options), 't0', 14);\n\n          case 14:\n            _iteratorNormalCompletion2 = true;\n            context$2$0.next = 7;\n            break;\n\n          case 17:\n            context$2$0.next = 23;\n            break;\n\n          case 19:\n            context$2$0.prev = 19;\n            context$2$0.t1 = context$2$0['catch'](5);\n            _didIteratorError2 = true;\n            _iteratorError2 = context$2$0.t1;\n\n          case 23:\n            context$2$0.prev = 23;\n            context$2$0.prev = 24;\n\n            if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n              _iterator2['return']();\n            }\n\n          case 26:\n            context$2$0.prev = 26;\n\n            if (!_didIteratorError2) {\n              context$2$0.next = 29;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 29:\n            return context$2$0.finish(26);\n\n          case 30:\n            return context$2$0.finish(23);\n\n          case 31:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, callParseChild, this, [[5, 19, 23, 31], [24,, 26, 30]]);\n    })\n  }, {\n    key: '_destroy',\n    value: function _destroy(destroy) {\n      destroy(this.child);\n      destroy(this.separator);\n\n      delete this.child;\n      delete this.separator;\n    }\n  }], [{\n    key: 'defaultProps',\n    value: {\n      max: _Number$MAX_SAFE_INTEGER,\n      min: 1,\n      unique: false\n    },\n    enumerable: true\n  }]);\n\n  return Repeat;\n})(_laconaPhrase.Phrase);\n\nexports.Repeat = Repeat;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/sequence.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _defineProperty = require('babel-runtime/helpers/define-property')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _getIterator = require('babel-runtime/core-js/get-iterator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _parse = require('../parse');\n\nvar _reconcile = require('../reconcile');\n\nvar Sequence = (function (_Phrase) {\n  _inherits(Sequence, _Phrase);\n\n  function Sequence() {\n    _classCallCheck(this, Sequence);\n\n    _get(Object.getPrototypeOf(Sequence.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Sequence, [{\n    key: '_handleParse',\n    value: _regeneratorRuntime.mark(function _handleParse(input, options) {\n      var modifications;\n      return _regeneratorRuntime.wrap(function _handleParse$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            this.childPhrases = (0, _reconcile.reconcile)({ descriptor: this.props.children, phrase: this.childPhrases, options: options });\n\n            modifications = {\n              result: {},\n              score: 1\n            };\n            return context$2$0.delegateYield(this.parseChildControl(0, _lodash2['default'].assign({}, input, modifications), options), 't0', 3);\n\n          case 3:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, _handleParse, this);\n    })\n  }, {\n    key: 'parseChildControl',\n    value: _regeneratorRuntime.mark(function parseChildControl(childIndex, input, options) {\n      var trueInput, previousChild, success, child;\n      return _regeneratorRuntime.wrap(function parseChildControl$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            if (!(childIndex >= this.childPhrases.length)) {\n              context$2$0.next = 4;\n              break;\n            }\n\n            context$2$0.next = 3;\n            return input;\n\n          case 3:\n            return context$2$0.abrupt('return');\n\n          case 4:\n            trueInput = input;\n\n            if (!(childIndex > 0 && this.childPhrases[childIndex - 1].props.ellipsis)) {\n              context$2$0.next = 19;\n              break;\n            }\n\n            previousChild = this.childPhrases[childIndex - 1];\n\n            if (!(trueInput.text === '')) {\n              context$2$0.next = 14;\n              break;\n            }\n\n            if (!(childIndex <= 1 || !_lodash2['default'].includes(trueInput._previousEllipsis, this.childPhrases[childIndex - 2]))) {\n              context$2$0.next = 12;\n              break;\n            }\n\n            context$2$0.next = 11;\n            return trueInput;\n\n          case 11:\n            trueInput = _lodash2['default'].assign({}, trueInput, {\n              _previousEllipsis: trueInput._previousEllipsis.concat(previousChild)\n            });\n\n          case 12:\n            context$2$0.next = 19;\n            break;\n\n          case 14:\n            success = false;\n            context$2$0.next = 17;\n            return _lodash2['default'].assign({}, trueInput, {\n              callbacks: trueInput.callbacks.concat(function () {\n                return success = true;\n              })\n            });\n\n          case 17:\n            if (!success) {\n              context$2$0.next = 19;\n              break;\n            }\n\n            return context$2$0.abrupt('return');\n\n          case 19:\n            child = this.childPhrases[childIndex];\n\n            if (!child.props.optional) {\n              context$2$0.next = 34;\n              break;\n            }\n\n            success = false;\n\n            if (child.props.limited) {\n              trueInput = _lodash2['default'].assign({}, trueInput, { callbacks: trueInput.callbacks.concat(function () {\n                  return success = true;\n                }) });\n            }\n\n            if (!child.props.preferred) {\n              context$2$0.next = 29;\n              break;\n            }\n\n            return context$2$0.delegateYield(this.parseChild(childIndex, trueInput, options), 't0', 25);\n\n          case 25:\n            if (!(!child.props.limited || !success)) {\n              context$2$0.next = 27;\n              break;\n            }\n\n            return context$2$0.delegateYield(this.parseChildControl(childIndex + 1, trueInput, options), 't1', 27);\n\n          case 27:\n            context$2$0.next = 32;\n            break;\n\n          case 29:\n            return context$2$0.delegateYield(this.parseChildControl(childIndex + 1, trueInput, options), 't2', 30);\n\n          case 30:\n            if (!(!child.props.limited || !success)) {\n              context$2$0.next = 32;\n              break;\n            }\n\n            return context$2$0.delegateYield(this.parseChild(childIndex, trueInput, options), 't3', 32);\n\n          case 32:\n            context$2$0.next = 35;\n            break;\n\n          case 34:\n            return context$2$0.delegateYield(this.parseChild(childIndex, trueInput, options), 't4', 35);\n\n          case 35:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, parseChildControl, this);\n    })\n  }, {\n    key: 'parseChild',\n    value: _regeneratorRuntime.mark(function parseChild(childIndex, input, options) {\n      var child, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output, modifications, nextOutput;\n\n      return _regeneratorRuntime.wrap(function parseChild$(context$2$0) {\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            child = this.childPhrases[childIndex];\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            context$2$0.prev = 4;\n            _iterator = _getIterator((0, _parse.parse)({ phrase: child, input: input, options: options }));\n\n          case 6:\n            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n              context$2$0.next = 21;\n              break;\n            }\n\n            output = _step.value;\n\n            if (!(this.props.unique && output.result != null)) {\n              context$2$0.next = 15;\n              break;\n            }\n\n            if (!(child.props.id && input.result[child.props.id] != null)) {\n              context$2$0.next = 13;\n              break;\n            }\n\n            return context$2$0.abrupt('continue', 18);\n\n          case 13:\n            if (!(child.props.merge && !_lodash2['default'].isEmpty(_lodash2['default'].intersection(_lodash2['default'].keys(input.result), _lodash2['default'].keys(output.result))))) {\n              context$2$0.next = 15;\n              break;\n            }\n\n            return context$2$0.abrupt('continue', 18);\n\n          case 15:\n            modifications = {\n              result: getAccumulatedResult(input.result, child, output.result),\n              score: input.score * output.score,\n              qualifiers: input.qualifiers.concat(output.qualifiers)\n            };\n            nextOutput = _lodash2['default'].assign({}, output, modifications);\n            return context$2$0.delegateYield(this.parseChildControl(childIndex + 1, nextOutput, options), 't0', 18);\n\n          case 18:\n            _iteratorNormalCompletion = true;\n            context$2$0.next = 6;\n            break;\n\n          case 21:\n            context$2$0.next = 27;\n            break;\n\n          case 23:\n            context$2$0.prev = 23;\n            context$2$0.t1 = context$2$0['catch'](4);\n            _didIteratorError = true;\n            _iteratorError = context$2$0.t1;\n\n          case 27:\n            context$2$0.prev = 27;\n            context$2$0.prev = 28;\n\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n\n          case 30:\n            context$2$0.prev = 30;\n\n            if (!_didIteratorError) {\n              context$2$0.next = 33;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 33:\n            return context$2$0.finish(30);\n\n          case 34:\n            return context$2$0.finish(27);\n\n          case 35:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, parseChild, this, [[4, 23, 27, 35], [28,, 30, 34]]);\n    })\n  }, {\n    key: '_destroy',\n    value: function _destroy(destroy) {\n      _lodash2['default'].forEach(this.childPhrases, destroy);\n\n      delete this.childPhrases;\n    }\n  }]);\n\n  return Sequence;\n})(_laconaPhrase.Phrase);\n\nexports.Sequence = Sequence;\n\nfunction getAccumulatedResult(inputResult, child, childResult) {\n  if (!_lodash2['default'].isUndefined(childResult)) {\n    var childId = child.props.id;\n    var childMerge = child.props.merge;\n    if (childId) {\n      return _lodash2['default'].assign({}, inputResult, _defineProperty({}, childId, childResult));\n    } else if (childMerge) {\n      if (!_lodash2['default'].isEmpty(inputResult) && _lodash2['default'].isPlainObject(childResult)) {\n        return _lodash2['default'].merge({}, inputResult, childResult);\n      } else {\n        return childResult;\n      }\n    }\n  }\n  return inputResult;\n}\n// we've reached the end\n// id\n// merge","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/elements/tap.js":"/** @jsx createElement */\n'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _regeneratorRuntime = require('babel-runtime/regenerator')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _laconaPhrase = require('lacona-phrase');\n\nvar _parse = require('../parse');\n\nvar _reconcile = require('../reconcile');\n\nvar Tap = (function (_Phrase) {\n  _inherits(Tap, _Phrase);\n\n  function Tap() {\n    _classCallCheck(this, Tap);\n\n    _get(Object.getPrototypeOf(Tap.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Tap, [{\n    key: '_handleParse',\n    value: _regeneratorRuntime.mark(function _handleParse(input, options) {\n      return _regeneratorRuntime.wrap(function _handleParse$(context$2$0) {\n        var _this = this;\n\n        while (1) switch (context$2$0.prev = context$2$0.next) {\n          case 0:\n            this.childPhrase = (0, _reconcile.reconcile)({ descriptor: this.props.children[0], phrase: this.childPhrase, options: options });\n\n            if (input.text != null) {\n              options.scheduleParseEndCallback(function () {\n                return _this.props['function'](input.text);\n              });\n            }\n\n            return context$2$0.delegateYield((0, _parse.parse)({ phrase: this.childPhrase, input: input, options: options }), 't0', 3);\n\n          case 3:\n          case 'end':\n            return context$2$0.stop();\n        }\n      }, _handleParse, this);\n    })\n  }, {\n    key: '_destroy',\n    value: function _destroy(destroy) {\n      destroy(this.childPhrase);\n\n      delete this.childPhrase;\n    }\n  }], [{\n    key: 'defaultProps',\n    value: {\n      'function': function _function() {}\n    },\n    enumerable: true\n  }]);\n\n  return Tap;\n})(_laconaPhrase.Phrase);\n\nexports.Tap = Tap;","/home/travis/build/npmtest/node-npmtest-lacona/node_modules/lacona/lib/source-manager.js":"'use strict';\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _component = require('./component');\n\nvar SourceManager = (function () {\n  function SourceManager(_ref) {\n    var _ref$update = _ref.update;\n    var update = _ref$update === undefined ? function () {} : _ref$update;\n\n    _classCallCheck(this, SourceManager);\n\n    this._sourceMaps = [];\n    this._fetchObjects = [];\n    this.update = update;\n    this.existCount = 0;\n  }\n\n  _createClass(SourceManager, [{\n    key: '_triggerSourceUpdate',\n    value: function _triggerSourceUpdate(instance) {\n      _lodash2['default'].forEach(this._sourceMaps, function (existingSource) {\n        if (existingSource.instance.source === instance) {\n          if (existingSource.instance.onUpdate) existingSource.instance.onUpdate();\n        }\n      });\n      instance.__dataVersion++;\n      this.update();\n    }\n  }, {\n    key: '_createSource',\n    value: function _createSource(descriptor) {\n      var _this = this;\n\n      var Constructor = (0, _component.getConstructor)({ Constructor: descriptor.Constructor, type: 'source' });\n      var props = (0, _component.getRealProps)({ descriptor: descriptor, Constructor: descriptor.Constructor });\n      var instance = (0, _component.instantiate)({ Constructor: Constructor, props: props });\n\n      instance.__dataVersion = 0;\n      instance.__subscriberCount = 0;\n      instance.__isCreating = true;\n\n      instance.setData = function (newData) {\n        // setData during onCreate() doesn't trigger source Update\n        instance.data = newData;\n        if (!instance.__isCreating) {\n          _this._triggerSourceUpdate(instance);\n        }\n      };\n\n      (0, _component.addSource)({ component: instance, options: { sourceManager: this } });\n\n      this._sourceMaps.push({ instance: instance, descriptor: descriptor });\n\n      if (instance.onCreate) instance.onCreate();\n\n      instance.__isCreating = false;\n\n      return instance;\n    }\n  }, {\n    key: '_destroySource',\n    value: function _destroySource(source) {\n      if (source.onDestroy) source.onDestroy();\n      (0, _component.removeSource)({ component: source, options: { sourceManager: this } });\n\n      var index = _lodash2['default'].findIndex(this._sourceMaps, function (sourceMap) {\n        return source === sourceMap.instance;\n      });\n      this._sourceMaps.splice(index, 1);\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe(descriptor) {\n      var possibleSourceMap = _lodash2['default'].find(this._sourceMaps, function (source) {\n        return _lodash2['default'].isEqual(descriptor, source.descriptor);\n      });\n\n      var source = undefined;\n      if (possibleSourceMap) {\n        source = possibleSourceMap.instance;\n      } else {\n        source = this._createSource(descriptor);\n      }\n\n      source.__subscriberCount++;\n\n      return source;\n    }\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(source) {\n      source.__subscriberCount--;\n      if (source.__subscriberCount === 0) {\n        this._destroySource(source);\n      }\n    }\n  }, {\n    key: 'getDataVersion',\n    value: function getDataVersion(source) {\n      return source.__dataVersion;\n    }\n  }, {\n    key: 'activate',\n    value: function activate() {\n      _lodash2['default'].chain(this._sourceMaps).filter(function (source) {\n        return source.instance.onActivate;\n      }).forEach(function (source) {\n        return source.instance.onActivate();\n      }).value();\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      _lodash2['default'].chain(this._sourceMaps).filter(function (source) {\n        return source.instance.onDeactivate;\n      }).forEach(function (source) {\n        return source.instance.onDeactivate();\n      }).value();\n    }\n  }]);\n\n  return SourceManager;\n})();\n\nexports['default'] = SourceManager;\nmodule.exports = exports['default'];"}